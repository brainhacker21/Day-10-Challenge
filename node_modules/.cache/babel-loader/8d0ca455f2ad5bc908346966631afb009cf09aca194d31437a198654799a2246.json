{"ast":null,"code":"var _jsxFileName = \"D:\\\\Intern trainee\\\\Day 9 Challenge\\\\reactjsx\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\nlet todoList = [];\nconst todoForm = document.getElementById('todo-form');\nconst todoTable = document.getElementById('todo-list').getElementsByTagName('tbody')[0];\nfunction renderTodoList() {\n  todoTable.innerHTML = '';\n  todoList.forEach(function (todo, index) {\n    let row = todoTable.insertRow(index);\n    let no = row.insertCell(0);\n    let description = row.insertCell(1);\n    let status = row.insertCell(2);\n    no.innerHTML = index + 1;\n    description.innerHTML = todo.description;\n    status.innerHTML = todo.status;\n  });\n}\nfunction addTodoToList(event) {\n  event.preventDefault();\n  let descriptionInput = document.getElementById('description');\n  let statusInput = document.getElementById('stat');\n  let newTodo = {\n    description: descriptionInput.value,\n    status: statusInput.value\n  };\n  todoList.push(newTodo);\n  renderTodoList();\n  descriptionInput.value = '';\n}\ntodoForm.addEventListener('submit', addTodoToList);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","todoList","todoForm","todoTable","getElementsByTagName","renderTodoList","innerHTML","forEach","todo","index","row","insertRow","no","insertCell","description","status","addTodoToList","event","preventDefault","descriptionInput","statusInput","newTodo","value","push","addEventListener"],"sources":["D:/Intern trainee/Day 9 Challenge/reactjsx/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nlet todoList = [];\n\nconst todoForm = document.getElementById('todo-form');\nconst todoTable = document.getElementById('todo-list').getElementsByTagName('tbody')[0];\n\nfunction renderTodoList() {\n   todoTable.innerHTML = '';\n   todoList.forEach(function(todo, index) {\n       let row = todoTable.insertRow(index);\n       let no = row.insertCell(0);\n       let description = row.insertCell(1);\n       let status = row.insertCell(2);\n       no.innerHTML = index + 1;\n       description.innerHTML = todo.description;\n       status.innerHTML = todo.status;\n   });\n}\n\nfunction addTodoToList(event) {\n   event.preventDefault();\n   let descriptionInput = document.getElementById('description');\n   let statusInput = document.getElementById('stat')\n   let newTodo = {\n       description: descriptionInput.value,\n       status: statusInput.value\n   };\n   todoList.push(newTodo);\n   renderTodoList();\n   descriptionInput.value = '';\n}\n\ntodoForm.addEventListener('submit', addTodoToList);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACH,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACU,CACpB;AAED,IAAIC,QAAQ,GAAG,EAAE;AAEjB,MAAMC,QAAQ,GAAGV,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;AACrD,MAAMU,SAAS,GAAGX,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACW,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAEvF,SAASC,cAAcA,CAAA,EAAG;EACvBF,SAAS,CAACG,SAAS,GAAG,EAAE;EACxBL,QAAQ,CAACM,OAAO,CAAC,UAASC,IAAI,EAAEC,KAAK,EAAE;IACnC,IAAIC,GAAG,GAAGP,SAAS,CAACQ,SAAS,CAACF,KAAK,CAAC;IACpC,IAAIG,EAAE,GAAGF,GAAG,CAACG,UAAU,CAAC,CAAC,CAAC;IAC1B,IAAIC,WAAW,GAAGJ,GAAG,CAACG,UAAU,CAAC,CAAC,CAAC;IACnC,IAAIE,MAAM,GAAGL,GAAG,CAACG,UAAU,CAAC,CAAC,CAAC;IAC9BD,EAAE,CAACN,SAAS,GAAGG,KAAK,GAAG,CAAC;IACxBK,WAAW,CAACR,SAAS,GAAGE,IAAI,CAACM,WAAW;IACxCC,MAAM,CAACT,SAAS,GAAGE,IAAI,CAACO,MAAM;EAClC,CAAC,CAAC;AACL;AAEA,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC3BA,KAAK,CAACC,cAAc,EAAE;EACtB,IAAIC,gBAAgB,GAAG3B,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;EAC7D,IAAI2B,WAAW,GAAG5B,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EACjD,IAAI4B,OAAO,GAAG;IACVP,WAAW,EAAEK,gBAAgB,CAACG,KAAK;IACnCP,MAAM,EAAEK,WAAW,CAACE;EACxB,CAAC;EACDrB,QAAQ,CAACsB,IAAI,CAACF,OAAO,CAAC;EACtBhB,cAAc,EAAE;EAChBc,gBAAgB,CAACG,KAAK,GAAG,EAAE;AAC9B;AAEApB,QAAQ,CAACsB,gBAAgB,CAAC,QAAQ,EAAER,aAAa,CAAC;;AAElD;AACA;AACA;AACA7B,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}